name: Build and tag

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Windows
        run: npm run dist:win
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-win
          path: dist/*.exe
        
  build-macos:
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{secrets.overlayx-release-token}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for macOS
        run: npm run dist:mac

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-mac
          path: |
              dist/*.app
              dist/*.dmg
              dist/*.zip
          
  build-linux:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.overlayx-release-token}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run dist:linux
        
      - name: Debug dist-linux
        run: ls -al dist/linux-unpacked
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-linux
          path: |
                dist/*.deb
                dist/*.AppImage

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.overlayx-release-token }}
      GH_TOKEN: ${{ secrets.overlayx-release-token }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install
        
      - name: Get version from package.json
        id: version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      # - name: Create a new tag
      #   run: git tag v${{ steps.version.outputs.version }}
        
      # - name: Push Git tag
      #   run: git push origin v${{ steps.version.outputs.version }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-linux
          path: dist-linux
          
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-mac
          path: dist-mac    
          
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-win
          path: dist-win   
          
      - name: Debug all
        run: ls -al
        
      - name: Debug dist-mac
        run: ls -al dist-mac
        
      - name: debug dist-win
        run: ls -al dist-win
        
      - name: Merge build artifacts
        run: |
          cp -R dist-linux/. dist/
          cp -R dist-mac/. dist/
          cp -R dist-win/. dist/

      - name: Print Current Directory Contents
        run: ls -al dist
        
      - name: Tag and Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          tag: "v${{ steps.version.outputs.version }}"
          commit: "main"
