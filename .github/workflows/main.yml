name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  get-next-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}
      
  update-package-version:
    needs: get-next-version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Update package version
        run: |
          sed -i 's/"version": "[^"]*"/"version": "${{ steps.get-next-version.outputs.new-release-version }}"/' package.json

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "Update package version [skip ci]"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          

        
  build-windows:
    needs: update-package-version
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Windows
        run: npm run dist:win
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-win
          path: dist/*.exe
        
  build-macos:
    needs: update-package-version
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for macOS
        run: npm run dist:mac

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-mac
          path: |
              dist/*.app
              dist/*.dmg
              dist/*.zip
          
  build-linux:
    needs: update-package-version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run dist:linux
        
      - name: Debug dist-linux
        run: ls -al dist/linux-unpacked
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-linux
          path: |
                dist/*.deb
                dist/*.AppImage
  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Node.js with Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 21.5.0
          registry-url: 'https://registry.yarnpkg.com/'

      - name: Install dependencies with Yarn
        run: yarn install
        
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-linux
          path: dist-linux
              
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-mac
          path: dist-mac    
          
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-win
          path: dist-win   
          
      - name: Debug all
        run: ls -al
        
      - name: Debug dist-mac
        run: ls -al dist-mac
        
      - name: debug dist-win
        run: ls -al dist-win
        
      - name: Merge build artifacts
        run: |
          cp -R dist-linux/. dist/
          cp -R dist-mac/. dist/
          cp -R dist-win/. dist/

      - name: Print Current Directory Contents
        run: ls -al dist
        
      - name: Run Semantic Release on merge to main
        uses: cycjimmy/semantic-release-action@v4
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Capture new release version
        id: capture-release
        run: echo "::set-output name=new_release_version::$(git describe --tags --abbrev=0)"

      - name: Display captured release version
        run: echo "new release version - ${{ steps.capture-release.outputs.new_release_version }}"
