name: Electron Release

on:
  push:
    branches:
      - main

jobs:
  # build-windows:
  #   runs-on: windows-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Build Electron app for Windows
  #       run: npm run pack:win

  # build-macos:
  #   runs-on: macos-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Build Electron app for macOS
  #       run: npm run pack:mac

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run pack:linux

  release:
    needs: [build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        
      - name: Get version from package.json
        id: version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Create a new tag
        run: git tag v${{ steps.version.outputs.version }}

      - name: Push the tag
        env:
          GITHUB_TOKEN: ${{ secrets.overlayx-release-token }}
        run: git push origin v${{ steps.version.outputs.version }}
